{"remainingRequest":"E:\\Notes_Sharing Study System\\note-front\\node_modules\\babel-loader\\lib\\index.js!E:\\Notes_Sharing Study System\\note-front\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!E:\\Notes_Sharing Study System\\note-front\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\Notes_Sharing Study System\\note-front\\src\\views\\notes\\childrens\\NoteCommentContainer.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\Notes_Sharing Study System\\note-front\\src\\views\\notes\\childrens\\NoteCommentContainer.vue","mtime":1672661779644},{"path":"E:\\Notes_Sharing Study System\\note-front\\babel.config.js","mtime":1663921093000},{"path":"E:\\Notes_Sharing Study System\\note-front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\Notes_Sharing Study System\\note-front\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"E:\\Notes_Sharing Study System\\note-front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\Notes_Sharing Study System\\note-front\\node_modules\\vue-loader\\lib\\index.js","mtime":1655715099000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IE5vdGVDb21tZW50TGlzdCBmcm9tICIuL05vdGVDb21tZW50TGlzdC52dWUiOwppbXBvcnQgeyBnZXRDb21tZW50QnlOb3RlSWQsIGdldENvbW1lbnRMaWtlUmVsYXRpb24sIHNhdmVDb21tZW50IH0gZnJvbSAiQC9uZXR3b3JrL25vdGUvaW5kZXguanMiOwpleHBvcnQgZGVmYXVsdCB7CiAgZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGNvbW1lbnRDb250ZW50OiAiIiwKICAgICAgY29tbWVudERhdGE6IFtdLAogICAgICBsaWtlUmVsYXRpb246IFtdLAogICAgICBpc1JlcGx5OiBmYWxzZSwKICAgICAgY3VycmVudFJlcGx5RGF0YToge30KICAgIH07CiAgfSwKCiAgY3JlYXRlZCgpIHsKICAgIHRoaXMuZ2V0RGF0YSgpOwogIH0sCgogIGNvbXB1dGVkOiB7CiAgICAvLyDmoLnmja7or4TorrppZOWOu+WMuemFjeWvueW6lOeahGxpa2UKICAgIGdldExpa2VEYXRhKCkgewogICAgICBpZiAoIXRoaXMubGlrZVJlbGF0aW9uKSByZXR1cm4gKCkgPT4gKHt9KTsKICAgICAgcmV0dXJuIGl0ZW0gPT4gewogICAgICAgIHJldHVybiB0aGlzLmxpa2VSZWxhdGlvbi5maW5kKGxpa2VJdGVtID0+IGxpa2VJdGVtLmlkID09PSBpdGVtLmlkKTsKICAgICAgfTsKICAgIH0sCgogICAgcmVwbHlQbGFjZWhvbGRlcigpIHsKICAgICAgcmV0dXJuIHRoaXMuaXNSZXBseSA/IGBSZXBseSBAJHt0aGlzLmN1cnJlbnRSZXBseURhdGEudXNlck5hbWV9YCA6ICJQb3N0IEEgRnJpZW5kbHkgQ29tbWVudCI7CiAgICB9LAoKICAgIGlzTG9naW4oKSB7CiAgICAgIHJldHVybiB0aGlzLiRzdG9yZS5zdGF0ZS51c2VySW5mbzsKICAgIH0sCgogICAgY3VycmVudFVzZXJBdmF0YXIoKSB7CiAgICAgIGlmICghdGhpcy4kc3RvcmUuc3RhdGUudXNlckluZm8pIHJldHVybiAiaHR0cHM6Ly9jdWJlLmVsZW1lY2RuLmNvbS8wLzg4LzAzYjBkMzk1ODNmNDgyMDY3NjhhNzUzNGU1NWJjcG5nLnBuZyI7CiAgICAgIHJldHVybiB0aGlzLiRzdG9yZS5zdGF0ZS51c2VySW5mby5hdmF0YXJVcmw7CiAgICB9CgogIH0sCiAgbWV0aG9kczogewogICAgYXN5bmMgZ2V0RGF0YSgpIHsKICAgICAgY29uc3QgewogICAgICAgIGRhdGEKICAgICAgfSA9IGF3YWl0IGdldENvbW1lbnRCeU5vdGVJZCh0aGlzLiRyb3V0ZS5xdWVyeS5pZCk7CiAgICAgIHRoaXMuY29tbWVudERhdGEgPSBkYXRhOwogICAgICBjb25zdCB7CiAgICAgICAgZGF0YTogcmVsYXRpb25EYXRhCiAgICAgIH0gPSBhd2FpdCB0aGlzLmdldExpa2VSZWxhdGlvbigpOwogICAgICB0aGlzLmxpa2VSZWxhdGlvbiA9IHJlbGF0aW9uRGF0YTsKICAgIH0sCgogICAgZ2V0TGlrZVJlbGF0aW9uKCkgewogICAgICByZXR1cm4gZ2V0Q29tbWVudExpa2VSZWxhdGlvbih0aGlzLiRzdG9yZS5zdGF0ZS51c2VySW5mby51c2VyaWQsIHRoaXMuJHJvdXRlLnF1ZXJ5LmlkKTsKICAgIH0sCgogICAgcG9zdENvbW1lbnQoKSB7CiAgICAgIGxldCBjb21tZW50RGF0YSA9IHsKICAgICAgICB1c2VySWQ6IHRoaXMuJHN0b3JlLnN0YXRlLnVzZXJJbmZvLnVzZXJpZCwKICAgICAgICBjb21tZW50Q29udGVudDogdGhpcy5jb21tZW50Q29udGVudCwKICAgICAgICBub3RlSWQ6IHRoaXMuJHJvdXRlLnF1ZXJ5LmlkCiAgICAgIH07CgogICAgICBpZiAodGhpcy5jb21tZW50Q29udGVudC5sZW5ndGggPiAxMzApIHsKICAgICAgICB0aGlzLiRtZXNzYWdlLndhcm5pbmcoIlRoZSBsZW5ndGggb2YgdGhlIGNvbW1lbnQgY29udGVudCBjYW5ub3QgZXhjZWVkIDEzMCBjaGFyYWN0ZXJzIik7CiAgICAgICAgcmV0dXJuOwogICAgICB9CgogICAgICBpZiAodGhpcy5jb21tZW50Q29udGVudC50cmltKCkubGVuZ3RoID09IDApIHsKICAgICAgICB0aGlzLiRtZXNzYWdlLndhcm5pbmcoIkNhbm5vdCBwb3N0IGJsYW5rIGNvbnRlbnQiKTsKICAgICAgICByZXR1cm47CiAgICAgIH0KCiAgICAgIGlmICh0aGlzLmlzUmVwbHkpIHsKICAgICAgICBjb21tZW50RGF0YS5wYXJlbnRJZCA9IHRoaXMuY3VycmVudFJlcGx5RGF0YS5wYXJlbnRJZCA9PSAwID8gdGhpcy5jdXJyZW50UmVwbHlEYXRhLmlkIDogdGhpcy5jdXJyZW50UmVwbHlEYXRhLnBhcmVudElkOwogICAgICAgIGNvbW1lbnREYXRhLnJlcGx5SWQgPSB0aGlzLmN1cnJlbnRSZXBseURhdGEuaWQ7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgY29tbWVudERhdGEucGFyZW50SWQgPSAwOwogICAgICAgIGNvbW1lbnREYXRhLnJlcGx5SWQgPSAwOwogICAgICB9CgogICAgICBjb25zb2xlLmxvZyhjb21tZW50RGF0YSk7CiAgICAgIHNhdmVDb21tZW50KGNvbW1lbnREYXRhKS50aGVuKCgpID0+IHsKICAgICAgICB0aGlzLmlzUmVwbHkgPSBmYWxzZTsKICAgICAgICB0aGlzLmNvbW1lbnRDb250ZW50ID0gIiI7CiAgICAgICAgdGhpcy4kbWVzc2FnZS5zdWNjZXNzKCJQb3N0IGEgY29tbWVudCBzdWNjZXNzZnVsbHkiKTsKICAgICAgICB0aGlzLmdldERhdGEoKTsKICAgICAgfSk7CiAgICB9LAoKICAgIGFzeW5jIHJlbG9hZExpa2VEYXRhKCkgewogICAgICBjb25zdCB7CiAgICAgICAgZGF0YTogcmVsYXRpb25EYXRhCiAgICAgIH0gPSBhd2FpdCB0aGlzLmdldExpa2VSZWxhdGlvbigpOwogICAgICByZWxhdGlvbkRhdGEuZm9yRWFjaCgoaXRlbSwgaW5kZXgpID0+IHsKICAgICAgICB0aGlzLiRzZXQodGhpcy5saWtlUmVsYXRpb24sIGluZGV4LCBpdGVtKTsKICAgICAgfSk7CiAgICB9LAoKICAgIHJlcGx5VXNlcihyZXBseUNvbW1lbnREYXRhKSB7CiAgICAgIGlmICh0aGlzLmNvbW1lbnRDb250ZW50KSB0aGlzLmNvbW1lbnRDb250ZW50ID0gIiI7CiAgICAgIHRoaXMuY3VycmVudFJlcGx5RGF0YSA9IHJlcGx5Q29tbWVudERhdGE7CiAgICAgIHRoaXMuaXNSZXBseSA9IHRydWU7CiAgICAgIHRoaXMuJHJlZnMucG9zdENvbW1lbnRJbnB1dFJlZi5mb2N1cygpOwogICAgfQoKICB9LAogIGNvbXBvbmVudHM6IHsKICAgIE5vdGVDb21tZW50TGlzdAogIH0KfTs="},{"version":3,"mappings":"AA0CA;AACA,SACAA,kBADA,EAEAC,sBAFA,EAGAC,WAHA,QAIA,yBAJA;AAKA;EACAC;IACA;MACAC,kBADA;MAEAC,eAFA;MAGAC,gBAHA;MAIAC,cAJA;MAKAC;IALA;EAOA,CATA;;EAUAC;IACA;EACA,CAZA;;EAaAC;IACA;IACAC;MACA;MACA;QACA;MACA,CAFA;IAGA,CAPA;;IAQAC;MACA,sBACA,0CADA,GAEA,yBAFA;IAGA,CAZA;;IAaAC;MACA;IACA,CAfA;;IAgBAC;MACA,iCACA;MACA;IACA;;EApBA,CAbA;EAmCAC;IACA;MACA;QAAAZ;MAAA;MACA;MACA;QAAAA;MAAA;MACA;IACA,CANA;;IAOAa;MACA,8BACA,iCADA,EAEA,oBAFA;IAIA,CAZA;;IAaAC;MACA;QACAC,yCADA;QAEAd,mCAFA;QAGAe;MAHA;;MAKA;QACA;QACA;MACA;;MACA;QACA;QACA;MACA;;MACA;QACAd,uBACA,sCACA,wBADA,GAEA,8BAHA;QAIAA;MACA,CANA,MAMA;QACAA;QACAA;MACA;;MACAe;MACAlB;QACA;QACA;QACA;QACA;MACA,CALA;IAMA,CA5CA;;IA6CA;MACA;QAAAC;MAAA;MACAkB;QACA;MACA,CAFA;IAGA,CAlDA;;IAmDAC;MACA;MACA;MACA;MACA;IACA;;EAxDA,CAnCA;EA6FAC;IAAAC;EAAA;AA7FA","names":["getCommentByNoteId","getCommentLikeRelation","saveComment","data","commentContent","commentData","likeRelation","isReply","currentReplyData","created","computed","getLikeData","replyPlaceholder","isLogin","currentUserAvatar","methods","getLikeRelation","postComment","userId","noteId","console","relationData","replyUser","components","NoteCommentList"],"sourceRoot":"src/views/notes/childrens","sources":["NoteCommentContainer.vue"],"sourcesContent":["<template>\n  <div class=\"comment-container\">\n    <div class=\"self-comment\" v-if=\"isLogin\">\n      <div>\n        <el-avatar :size=\"60\" :src=\"currentUserAvatar\"> </el-avatar>\n      </div>\n      <div style=\"width: 60%\">\n        <el-input\n          ref=\"postCommentInputRef\"\n          :placeholder=\"replyPlaceholder\"\n          v-model=\"commentContent\"\n        >\n        </el-input>\n      </div>\n      <div>\n        <el-button type=\"primary\" size=\"medium\" @click=\"postComment\"\n          >Post Comment</el-button\n        >\n      </div>\n    </div>\n    <div v-else class=\"login-tip\">\n      <el-link type=\"primary\" :underline=\"false\" href=\"/login\"\n        >Only after logging in can you comment, click me to jump to the login page</el-link\n      >\n    </div>\n    <div class=\"comments\">\n      <div v-if=\"commentData.length != 0\">\n        <NoteCommentList\n          v-for=\"(item, index) in commentData\"\n          :key=\"index\"\n          :listData=\"item\"\n          :likeData=\"getLikeData(item)\"\n          @reloadLikeData=\"reloadLikeData\"\n          @replyUser=\"replyUser\"\n        />\n      </div>\n      <div v-else style=\"text-align: center\">There are no comments under the current notes~</div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport NoteCommentList from \"./NoteCommentList.vue\";\nimport {\n  getCommentByNoteId,\n  getCommentLikeRelation,\n  saveComment,\n} from \"@/network/note/index.js\";\nexport default {\n  data() {\n    return {\n      commentContent: \"\",\n      commentData: [],\n      likeRelation: [],\n      isReply: false,\n      currentReplyData: {},\n    };\n  },\n  created() {\n    this.getData();\n  },\n  computed: {\n    // 根据评论id去匹配对应的like\n    getLikeData() {\n      if (!this.likeRelation) return () => ({});\n      return (item) => {\n        return this.likeRelation.find((likeItem) => likeItem.id === item.id);\n      };\n    },\n    replyPlaceholder() {\n      return this.isReply\n        ? `Reply @${this.currentReplyData.userName}`\n        : \"Post A Friendly Comment\";\n    },\n    isLogin() {\n      return this.$store.state.userInfo;\n    },\n    currentUserAvatar() {\n      if (!this.$store.state.userInfo)\n        return \"https://cube.elemecdn.com/0/88/03b0d39583f48206768a7534e55bcpng.png\";\n      return this.$store.state.userInfo.avatarUrl;\n    },\n  },\n  methods: {\n    async getData() {\n      const { data } = await getCommentByNoteId(this.$route.query.id);\n      this.commentData = data;\n      const { data: relationData } = await this.getLikeRelation();\n      this.likeRelation = relationData;\n    },\n    getLikeRelation() {\n      return getCommentLikeRelation(\n        this.$store.state.userInfo.userid,\n        this.$route.query.id\n      );\n    },\n    postComment() {\n      let commentData = {\n        userId: this.$store.state.userInfo.userid,\n        commentContent: this.commentContent,\n        noteId: this.$route.query.id,\n      };\n      if (this.commentContent.length > 130) {\n        this.$message.warning(\"The length of the comment content cannot exceed 130 characters\");\n        return;\n      }\n      if (this.commentContent.trim().length == 0) {\n        this.$message.warning(\"Cannot post blank content\");\n        return;\n      }\n      if (this.isReply) {\n        commentData.parentId =\n          this.currentReplyData.parentId == 0\n            ? this.currentReplyData.id\n            : this.currentReplyData.parentId;\n        commentData.replyId = this.currentReplyData.id;\n      } else {\n        commentData.parentId = 0;\n        commentData.replyId = 0;\n      }\n      console.log(commentData);\n      saveComment(commentData).then(() => {\n        this.isReply = false;\n        this.commentContent = \"\";\n        this.$message.success(\"Post a comment successfully\");\n        this.getData();\n      });\n    },\n    async reloadLikeData() {\n      const { data: relationData } = await this.getLikeRelation();\n      relationData.forEach((item, index) => {\n        this.$set(this.likeRelation, index, item);\n      });\n    },\n    replyUser(replyCommentData) {\n      if (this.commentContent) this.commentContent = \"\";\n      this.currentReplyData = replyCommentData;\n      this.isReply = true;\n      this.$refs.postCommentInputRef.focus();\n    },\n  },\n  components: { NoteCommentList },\n};\n</script>\n\n<style lang=\"less\" scoped>\n.comment-container {\n  padding: 40px 20px;\n  .self-comment {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    margin-bottom: 15px;\n  }\n  .login-tip {\n    height: 30px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n  }\n  .comments {\n    border-top: 1px solid #d9d9da;\n    padding-top: 40px;\n    margin-left: 30px;\n  }\n}\n</style>\n"]}]}