{"remainingRequest":"E:\\Gua_new\\note-front\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\Gua_new\\note-front\\src\\views\\group\\childrens\\GroupNote.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\Gua_new\\note-front\\src\\views\\group\\childrens\\GroupNote.vue","mtime":1672652088000},{"path":"E:\\Gua_new\\note-front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\Gua_new\\note-front\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"E:\\Gua_new\\note-front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\Gua_new\\note-front\\node_modules\\vue-loader\\lib\\index.js","mtime":1655715099000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmltcG9ydCBOb3RlSXRlbSBmcm9tICcuLi8uLi9pbmRleC9jaGlsZHJlbnMvTm90ZUl0ZW0udnVlJwppbXBvcnQgVGFnU2VsZWN0IGZyb20gJ0AvY29tcG9uZW50cy9UYWdTZWxlY3QudnVlJwppbXBvcnQgeyBnZXRPcmdhbml6ZU5vdGVzIH0gZnJvbSAnQC9uZXR3b3JrL2dyb3VwJwoKZXhwb3J0IGRlZmF1bHQgewogIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBjdXJyZW50VGFnOiAnJywKICAgICAgbm90ZXNEYXRhOiBbXSwKICAgICAgdG90YWw6IDAsCiAgICAgIHBhZ2VTaXplOiA2LCAvLyDkuIDpobXmmL7npLo25LiqCiAgICAgIGN1cnJlbnRQYWdlOiAxLCAvLyDlvZPliY3pobUKICAgICAgZ3JvdXBOYW1lOiAnJwogICAgfQogIH0sCiAgbW91bnRlZCgpIHsKICAgIHRoaXMuaW5pdCgpCiAgfSwKICBiZWZvcmVEZXN0cm95KCkgewogICAgdGhpcy4kYnVzLiRvZmYoJ3VwZGF0ZWQtYm9keScpCiAgICB0aGlzLiRidXMuJG9mZignZ2V0Q3VycmVudEdyb3VwTmFtZScpCiAgfSwKICBjb21wb25lbnRzOiB7IFRhZ1NlbGVjdCwgTm90ZUl0ZW0gfSwKICBtZXRob2RzOiB7CiAgICBpbml0KCkgewogICAgICAvLyDliJ3lp4vljJbojrflj5bnrJTorrAKICAgICAgdGhpcy5nZXROb3Rlcyh0aGlzLmN1cnJlbnRQYWdlLCB0aGlzLnBhZ2VTaXplKQoKICAgICAgdGhpcy4kYnVzLiRvbigndXBkYXRlZC1ib2R5JywgKCkgPT4gewogICAgICAgIHRoaXMuZ2V0Tm90ZXModGhpcy5jdXJyZW50UGFnZSwgdGhpcy5wYWdlU2l6ZSkKICAgICAgfSkKICAgICAgdGhpcy4kYnVzLiRvbignZ2V0Q3VycmVudEdyb3VwTmFtZScsIChncm91cE5hbWUpID0+IHsKICAgICAgICB0aGlzLmdyb3VwTmFtZSA9IGdyb3VwTmFtZSArICcvJwogICAgICB9KQogICAgfSwKICAgIGdldE5vdGVzKHBhZ2UsIHNpemUsIHRhZykgewogICAgICBjb25zdCBpZCA9IHRoaXMuJHJvdXRlLnF1ZXJ5LmlkCiAgICAgIGlmICghaWQpIHJldHVybgoKICAgICAgLy8g6Lev55Sx5L+d5a2Y54q25oCBCiAgICAgIHRoaXMuJHJvdXRlci5wdXNoKHsKICAgICAgICBwYXRoOiBgL2dyb3VwYCwKICAgICAgICBxdWVyeTogewogICAgICAgICAgaWQsCiAgICAgICAgICBwYWdlLAogICAgICAgICAgdGFnCiAgICAgICAgfQogICAgICB9KQogICAgICBnZXRPcmdhbml6ZU5vdGVzKGlkLCBwYWdlLCBzaXplLCB0YWcpLnRoZW4oKHJlcykgPT4gewogICAgICAgIHRoaXMudHJhbnNpdGlvblRpbWVGb3JtYXQocmVzLmRhdGEucm93cykKICAgICAgICB0aGlzLm5vdGVzRGF0YSA9IHJlcy5kYXRhLnJvd3MKICAgICAgICB0aGlzLnRvdGFsID0gcmVzLmRhdGEudG90YWwKICAgICAgfSkKICAgIH0sCiAgICAvLyDlsIbml7bpl7TnmoTml7bliIbnp5LljrvmjonvvIzlj6rnlZnkuIvlubTmnIjml6UKICAgIHRyYW5zaXRpb25UaW1lRm9ybWF0KHJvd3MpIHsKICAgICAgcm93cy5mb3JFYWNoKChyb3cpID0+IHsKICAgICAgICByb3cuY3JlYXRlZFRpbWUgPSByb3cuY3JlYXRlZFRpbWUuc3BsaXQoJyAnKVswXQogICAgICB9KQogICAgfSwKICAgIGluaXRQYWdlQ29uZmlnKCkgewogICAgICB0aGlzLnBhZ2VTaXplID0gNgogICAgICB0aGlzLmN1cnJlbnRQYWdlID0gMQogICAgfSwKICAgIHVwZGF0ZUN1cnJlbnRUYWcoY3VycmVudFRhZykgewogICAgICB0aGlzLmN1cnJlbnRUYWcgPSBjdXJyZW50VGFnCiAgICB9LAogICAgdXBkYXRlQ3VycmVudFBhZ2UoY3VycmVudFBhZ2UpIHsKICAgICAgdGhpcy5jdXJyZW50UGFnZSA9IGN1cnJlbnRQYWdlCiAgICAgIHRoaXMuZ2V0Tm90ZXModGhpcy5jdXJyZW50UGFnZSwgdGhpcy5wYWdlU2l6ZSwgdGhpcy50YWdWYWx1ZSkKICAgIH0KICB9LAogIGNvbXB1dGVkOiB7CiAgICAvLyDlj6rmnInkuIDpobXml7bmmK/lkKbpmpDol4/liIbpobUKICAgIGlzU2luZ2xlUGFnZSgpIHsKICAgICAgcmV0dXJuIHRoaXMudG90YWwgPD0gdGhpcy5wYWdlU2l6ZQogICAgfQogIH0sCiAgd2F0Y2g6IHsKICAgIGN1cnJlbnRUYWcobmV3VGFnVmFsdWUpIHsKICAgICAgdGhpcy5pbml0UGFnZUNvbmZpZygpIC8vIOWIh+aNonRhZ+eahOaXtuWAmSDmiopwYWdlU2l6ZeWSjGN1cnJlbnRQYWdl5Yid5aeL5YyWCiAgICAgIHRoaXMuZ2V0Tm90ZXModGhpcy5jdXJyZW50UGFnZSwgdGhpcy5wYWdlU2l6ZSwgbmV3VGFnVmFsdWUpCiAgICB9CiAgfQp9Cg=="},{"version":3,"sources":["GroupNote.vue"],"names":[],"mappings":";AA8BA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"GroupNote.vue","sourceRoot":"src/views/group/childrens","sourcesContent":["<template>\n  <div class=\"note-container\">\n    <div class=\"header\">\n      <div class=\"currentGroup\">{{ groupName }}{{ this.currentTag }}</div>\n      <TagSelect @updateTag=\"updateCurrentTag\" />\n    </div>\n\n    <div class=\"notes\">\n      <el-empty :image-size=\"300\" v-if=\"notesData.length == 0\"></el-empty>\n      <div class=\"notes\" v-else>\n        <NoteItem v-for=\"item in notesData\" :key=\"item.id\" :itemData=\"item\" />\n      </div>\n    </div>\n\n    <div class=\"page\">\n      <el-pagination\n        background\n        layout=\"prev, pager, next\"\n        :hide-on-single-page=\"isSinglePage\"\n        :page-size=\"pageSize\"\n        :total=\"total\"\n        :current-page=\"currentPage\"\n        @current-change=\"updateCurrentPage\"\n      >\n      </el-pagination>\n    </div>\n  </div>\n</template>\n\n<script>\nimport NoteItem from '../../index/childrens/NoteItem.vue'\nimport TagSelect from '@/components/TagSelect.vue'\nimport { getOrganizeNotes } from '@/network/group'\n\nexport default {\n  data() {\n    return {\n      currentTag: '',\n      notesData: [],\n      total: 0,\n      pageSize: 6, // 一页显示6个\n      currentPage: 1, // 当前页\n      groupName: ''\n    }\n  },\n  mounted() {\n    this.init()\n  },\n  beforeDestroy() {\n    this.$bus.$off('updated-body')\n    this.$bus.$off('getCurrentGroupName')\n  },\n  components: { TagSelect, NoteItem },\n  methods: {\n    init() {\n      // 初始化获取笔记\n      this.getNotes(this.currentPage, this.pageSize)\n\n      this.$bus.$on('updated-body', () => {\n        this.getNotes(this.currentPage, this.pageSize)\n      })\n      this.$bus.$on('getCurrentGroupName', (groupName) => {\n        this.groupName = groupName + '/'\n      })\n    },\n    getNotes(page, size, tag) {\n      const id = this.$route.query.id\n      if (!id) return\n\n      // 路由保存状态\n      this.$router.push({\n        path: `/group`,\n        query: {\n          id,\n          page,\n          tag\n        }\n      })\n      getOrganizeNotes(id, page, size, tag).then((res) => {\n        this.transitionTimeFormat(res.data.rows)\n        this.notesData = res.data.rows\n        this.total = res.data.total\n      })\n    },\n    // 将时间的时分秒去掉，只留下年月日\n    transitionTimeFormat(rows) {\n      rows.forEach((row) => {\n        row.createdTime = row.createdTime.split(' ')[0]\n      })\n    },\n    initPageConfig() {\n      this.pageSize = 6\n      this.currentPage = 1\n    },\n    updateCurrentTag(currentTag) {\n      this.currentTag = currentTag\n    },\n    updateCurrentPage(currentPage) {\n      this.currentPage = currentPage\n      this.getNotes(this.currentPage, this.pageSize, this.tagValue)\n    }\n  },\n  computed: {\n    // 只有一页时是否隐藏分页\n    isSinglePage() {\n      return this.total <= this.pageSize\n    }\n  },\n  watch: {\n    currentTag(newTagValue) {\n      this.initPageConfig() // 切换tag的时候 把pageSize和currentPage初始化\n      this.getNotes(this.currentPage, this.pageSize, newTagValue)\n    }\n  }\n}\n</script>\n\n<style lang=\"less\" scoped>\n.note-container {\n  flex: 1;\n\n  .header {\n    padding: 5px 20px;\n    margin-bottom: 18px;\n  }\n\n  .notes {\n    padding: 0px 50px;\n  }\n\n  .page {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    padding: 20px 0px;\n  }\n}\n</style>\n"]}]}