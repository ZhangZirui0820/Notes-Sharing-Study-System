{"remainingRequest":"E:\\Gua_new\\note-front\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\Gua_new\\note-front\\src\\views\\notes\\Index.vue?vue&type=style&index=0&id=14dd748c&lang=less&scoped=true&","dependencies":[{"path":"E:\\Gua_new\\note-front\\src\\views\\notes\\Index.vue","mtime":1672465994000},{"path":"E:\\Gua_new\\note-front\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\Gua_new\\note-front\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1655715156000},{"path":"E:\\Gua_new\\note-front\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"E:\\Gua_new\\note-front\\node_modules\\less-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\Gua_new\\note-front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\Gua_new\\note-front\\node_modules\\vue-loader\\lib\\index.js","mtime":1655715099000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci5ub3RlcyB7CiAgZGlzcGxheTogZmxleDsKICBmbGV4LWRpcmVjdGlvbjogY29sdW1uOwogIHBhZGRpbmc6IDEwcHggMTIwcHggMHB4OwogIC8vIGhlaWdodDogY2FsYygxMDAlIC0gMTBweCk7CiAgLy8gb3ZlcmZsb3cteTogaGlkZGVuOwp9Cg=="},{"version":3,"sources":["Index.vue"],"names":[],"mappings":";AAwDA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Index.vue","sourceRoot":"src/views/notes","sourcesContent":["<template>\n  <div class=\"notes\">\n    <NoteBreadcrumb\n      :info=\"\n        contentData ? { tag: contentData.tag, title: contentData.title } : {}\n      \"\n    />\n\n    <NoteContent :contentData=\"contentData\" @reloadGetData=\"reloadGetData\" />\n  </div>\n</template>\n\n<script>\nimport NoteBreadcrumb from \"./childrens/NoteBreadcrumb.vue\";\nimport NoteContent from \"./childrens/NoteContent.vue\";\nimport {\n  getNoteByNoteId,\n  getUserNoteAllRelation,\n} from \"@/network/note/index.js\";\n\nexport default {\n  data() {\n    return {\n      contentData: null,\n    };\n  },\n  components: { NoteBreadcrumb, NoteContent },\n  created() {\n    this.getData();\n  },\n  methods: {\n    async getData() {\n      const { data: noteData } = await getNoteByNoteId(this.$route.query.id);\n\n      if (this.$store.state.userInfo === null) {\n        // 用户未登录 关系全部都是无\n        noteData.relation = { isLike: false, isCollect: false };\n      } else {\n        // 用户登录，获取对应的关系\n        const { data: relation } = await getUserNoteAllRelation(\n          this.$store.state.userInfo.userid,\n          noteData.id\n        );\n        noteData.relation = relation;\n      }\n\n      this.contentData = noteData;\n    },\n    reloadGetData() {\n      this.getData();\n    },\n  },\n};\n</script>\n\n<style lang=\"less\" scoped>\n.notes {\n  display: flex;\n  flex-direction: column;\n  padding: 10px 120px 0px;\n  // height: calc(100% - 10px);\n  // overflow-y: hidden;\n}\n</style>\n"]}]}