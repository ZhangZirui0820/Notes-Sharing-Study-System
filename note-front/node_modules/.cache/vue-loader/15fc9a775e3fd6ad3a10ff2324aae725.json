{"remainingRequest":"E:\\Gua_new\\note-front\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\Gua_new\\note-front\\src\\views\\notes\\childrens\\NoteCommentContainer.vue?vue&type=style&index=0&id=33714797&lang=less&scoped=true&","dependencies":[{"path":"E:\\Gua_new\\note-front\\src\\views\\notes\\childrens\\NoteCommentContainer.vue","mtime":1672661779644},{"path":"E:\\Gua_new\\note-front\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\Gua_new\\note-front\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1655715156000},{"path":"E:\\Gua_new\\note-front\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"E:\\Gua_new\\note-front\\node_modules\\less-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\Gua_new\\note-front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\Gua_new\\note-front\\node_modules\\vue-loader\\lib\\index.js","mtime":1655715099000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci5jb21tZW50LWNvbnRhaW5lciB7CiAgcGFkZGluZzogNDBweCAyMHB4OwogIC5zZWxmLWNvbW1lbnQgewogICAgZGlzcGxheTogZmxleDsKICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjsKICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7CiAgICBtYXJnaW4tYm90dG9tOiAxNXB4OwogIH0KICAubG9naW4tdGlwIHsKICAgIGhlaWdodDogMzBweDsKICAgIGRpc3BsYXk6IGZsZXg7CiAgICBhbGlnbi1pdGVtczogY2VudGVyOwogICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7CiAgfQogIC5jb21tZW50cyB7CiAgICBib3JkZXItdG9wOiAxcHggc29saWQgI2Q5ZDlkYTsKICAgIHBhZGRpbmctdG9wOiA0MHB4OwogICAgbWFyZ2luLWxlZnQ6IDMwcHg7CiAgfQp9Cg=="},{"version":3,"sources":["NoteCommentContainer.vue"],"names":[],"mappings":";AAkJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"NoteCommentContainer.vue","sourceRoot":"src/views/notes/childrens","sourcesContent":["<template>\n  <div class=\"comment-container\">\n    <div class=\"self-comment\" v-if=\"isLogin\">\n      <div>\n        <el-avatar :size=\"60\" :src=\"currentUserAvatar\"> </el-avatar>\n      </div>\n      <div style=\"width: 60%\">\n        <el-input\n          ref=\"postCommentInputRef\"\n          :placeholder=\"replyPlaceholder\"\n          v-model=\"commentContent\"\n        >\n        </el-input>\n      </div>\n      <div>\n        <el-button type=\"primary\" size=\"medium\" @click=\"postComment\"\n          >Post Comment</el-button\n        >\n      </div>\n    </div>\n    <div v-else class=\"login-tip\">\n      <el-link type=\"primary\" :underline=\"false\" href=\"/login\"\n        >Only after logging in can you comment, click me to jump to the login page</el-link\n      >\n    </div>\n    <div class=\"comments\">\n      <div v-if=\"commentData.length != 0\">\n        <NoteCommentList\n          v-for=\"(item, index) in commentData\"\n          :key=\"index\"\n          :listData=\"item\"\n          :likeData=\"getLikeData(item)\"\n          @reloadLikeData=\"reloadLikeData\"\n          @replyUser=\"replyUser\"\n        />\n      </div>\n      <div v-else style=\"text-align: center\">There are no comments under the current notes~</div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport NoteCommentList from \"./NoteCommentList.vue\";\nimport {\n  getCommentByNoteId,\n  getCommentLikeRelation,\n  saveComment,\n} from \"@/network/note/index.js\";\nexport default {\n  data() {\n    return {\n      commentContent: \"\",\n      commentData: [],\n      likeRelation: [],\n      isReply: false,\n      currentReplyData: {},\n    };\n  },\n  created() {\n    this.getData();\n  },\n  computed: {\n    // 根据评论id去匹配对应的like\n    getLikeData() {\n      if (!this.likeRelation) return () => ({});\n      return (item) => {\n        return this.likeRelation.find((likeItem) => likeItem.id === item.id);\n      };\n    },\n    replyPlaceholder() {\n      return this.isReply\n        ? `Reply @${this.currentReplyData.userName}`\n        : \"Post A Friendly Comment\";\n    },\n    isLogin() {\n      return this.$store.state.userInfo;\n    },\n    currentUserAvatar() {\n      if (!this.$store.state.userInfo)\n        return \"https://cube.elemecdn.com/0/88/03b0d39583f48206768a7534e55bcpng.png\";\n      return this.$store.state.userInfo.avatarUrl;\n    },\n  },\n  methods: {\n    async getData() {\n      const { data } = await getCommentByNoteId(this.$route.query.id);\n      this.commentData = data;\n      const { data: relationData } = await this.getLikeRelation();\n      this.likeRelation = relationData;\n    },\n    getLikeRelation() {\n      return getCommentLikeRelation(\n        this.$store.state.userInfo.userid,\n        this.$route.query.id\n      );\n    },\n    postComment() {\n      let commentData = {\n        userId: this.$store.state.userInfo.userid,\n        commentContent: this.commentContent,\n        noteId: this.$route.query.id,\n      };\n      if (this.commentContent.length > 130) {\n        this.$message.warning(\"The length of the comment content cannot exceed 130 characters\");\n        return;\n      }\n      if (this.commentContent.trim().length == 0) {\n        this.$message.warning(\"Cannot post blank content\");\n        return;\n      }\n      if (this.isReply) {\n        commentData.parentId =\n          this.currentReplyData.parentId == 0\n            ? this.currentReplyData.id\n            : this.currentReplyData.parentId;\n        commentData.replyId = this.currentReplyData.id;\n      } else {\n        commentData.parentId = 0;\n        commentData.replyId = 0;\n      }\n      console.log(commentData);\n      saveComment(commentData).then(() => {\n        this.isReply = false;\n        this.commentContent = \"\";\n        this.$message.success(\"Post a comment successfully\");\n        this.getData();\n      });\n    },\n    async reloadLikeData() {\n      const { data: relationData } = await this.getLikeRelation();\n      relationData.forEach((item, index) => {\n        this.$set(this.likeRelation, index, item);\n      });\n    },\n    replyUser(replyCommentData) {\n      if (this.commentContent) this.commentContent = \"\";\n      this.currentReplyData = replyCommentData;\n      this.isReply = true;\n      this.$refs.postCommentInputRef.focus();\n    },\n  },\n  components: { NoteCommentList },\n};\n</script>\n\n<style lang=\"less\" scoped>\n.comment-container {\n  padding: 40px 20px;\n  .self-comment {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    margin-bottom: 15px;\n  }\n  .login-tip {\n    height: 30px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n  }\n  .comments {\n    border-top: 1px solid #d9d9da;\n    padding-top: 40px;\n    margin-left: 30px;\n  }\n}\n</style>\n"]}]}