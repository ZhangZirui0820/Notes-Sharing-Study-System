{"remainingRequest":"E:\\Gua_new\\note-front\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\Gua_new\\note-front\\src\\views\\self\\childrens\\Award.vue?vue&type=style&index=0&id=4fc1ecce&lang=less&scoped=true&","dependencies":[{"path":"E:\\Gua_new\\note-front\\src\\views\\self\\childrens\\Award.vue","mtime":1672661981053},{"path":"E:\\Gua_new\\note-front\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\Gua_new\\note-front\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1655715156000},{"path":"E:\\Gua_new\\note-front\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"E:\\Gua_new\\note-front\\node_modules\\less-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\Gua_new\\note-front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\Gua_new\\note-front\\node_modules\\vue-loader\\lib\\index.js","mtime":1655715099000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci5hd2FyZCB7CiAgcGFkZGluZzogMjBweCAxMDBweDsKCiAgLnBvaW50IHsKICAgIGNvbG9yOiAjOTc5MjkyOwogICAgZm9udC13ZWlnaHQ6IGJvbGQ7CiAgICBtYXJnaW4tYm90dG9tOiAyMHB4OwogIH0KCiAgLmF3YXJkLWxpc3QgewogICAgZGlzcGxheTogZmxleDsKICAgIGZsZXgtd3JhcDogd3JhcDsKICAgIC5pdGVtIHsKICAgICAgd2lkdGg6IDI1JTsKICAgIH0KICB9Cn0K"},{"version":3,"sources":["Award.vue"],"names":[],"mappings":";AA+DA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Award.vue","sourceRoot":"src/views/self/childrens","sourcesContent":["<template>\n  <div class=\"award\">\n    <div class=\"point\">Your Rest Points: {{ pointValue }}</div>\n    <div class=\"award-list\">\n      <AwardItem\n        class=\"item\"\n        v-for=\"item in awardList\"\n        :point=\"item\"\n        :key=\"item\"\n        @buy=\"hanldeBuy\"\n      />\n    </div>\n  </div>\n</template>\n\n<script>\nimport AwardItem from \"./AwardItem.vue\";\nimport { getPointInfo, exchangeAward } from \"@/network/self/index.js\";\nexport default {\n  data() {\n    return {\n      awardList: [100, 200, 300, 400, 500, 600],\n      point: 0,\n    };\n  },\n  components: { AwardItem },\n  computed: {\n    pointValue() {\n      return this.point;\n    },\n  },\n  created() {\n    this.getData();\n  },\n  methods: {\n    getData() {\n      getPointInfo(this.$store.state.userInfo.userid).then(({ data }) => {\n        this.point = data;\n      });\n    },\n    hanldeBuy(selectAwardPoint) {\n      if (this.point < selectAwardPoint) {\n        this.$message.warning(\"The current points are not enough\");\n      } else {\n        this.$confirm(`Confirm the redemption points as${selectAwardPoint}prizes?`, \"tip\", {\n          confirmButtonText: \"Confirm\",\n          cancelButtonText: \"Cancel\",\n          type: \"warning\",\n        }).then(async () => {\n          await exchangeAward(\n            this.$store.state.userInfo.userid,\n            selectAwardPoint\n          );\n          await this.getData();\n          this.$message.success(\"The exchange was successful!\");\n        });\n      }\n    },\n  },\n};\n</script>\n\n<style lang=\"less\" scoped>\n.award {\n  padding: 20px 100px;\n\n  .point {\n    color: #979292;\n    font-weight: bold;\n    margin-bottom: 20px;\n  }\n\n  .award-list {\n    display: flex;\n    flex-wrap: wrap;\n    .item {\n      width: 25%;\n    }\n  }\n}\n</style>\n"]}]}